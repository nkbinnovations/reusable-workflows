---
name: github-packer-deploy
run-name: "${{ github.actor }} has triggered the ${{ github.workflow }} workflow"
on:
  pull_request:
    types:
      - synchronize
      - opened
      - reopened
      - edited
  workflow_call:
    inputs:
      packer_environment:
        description: 'Packer Environment to use and load the variable files'
        required: false
        default: 'dev'
        type: string
      packer_version:
        description: 'Packer version to use'
        required: false
        default: 'latest'
        type: string
      packer_directory:
        description: 'Packer files directory to lint'
        required: false
        default: 'packer'
        type: string
      packer_action:
        description: 'Packer action to perform'
        required: false
        default: 'inspect'
        type: string
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}  # This is the concurrency group name and should be unique per pull request
  cancel-in-progress: ${{ !contains(github.ref, 'release/')}}  # Cancel previous runs if a new run is triggered on a non-release branch
env:
  PACKER_VERSION: ${{ inputs.packer_version || 'latest' }}
  PACKER_DIRECTORY: ${{ inputs.packer_directory || 'packer' }}
  PACKER_ACTION: ${{ inputs.packer_action || 'inspect' }}
  PACKER_ENVIRONMENT: ${{ inputs.packer_environment || 'dev'}}
jobs:
  github-packer-deploy:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4
        with:
          fetch-depth: 1
      - name: Set up Packer
        id: setup
        uses: hashicorp/setup-packer@1aa358be5cf73883762b302a3a03abd66e75b232  # v3
        with:
          version: "${{ env.PACKER_VERSION }}"
      - name: Packer Init
        id: init
        run: |-
          packer init -upgrade ${{ env.PACKER_DIRECTORY }}
      - name: Packer Validate
        id: validate
        if: steps.init.outcome == 'success'
        run: |-
          packer validate -syntax-only ${{ env.PACKER_DIRECTORY }}
      - name: Packer Fmt
        id: fmt
        if: steps.validate.outcome == 'success'
        run: |-
          packer fmt -diff -write=true -recursive "${{ env.PACKER_DIRECTORY }}"
        continue-on-error: true
      - name: Packer ${{ env.PACKER_ACTION }} action
        id: action
        if: steps.fmt.outcome == 'success' && ( env.PACKER_ACTION == 'inspect' || env.PACKER_ACTION == 'build' )
        run: |-
          extra_vars=$(find "${{ env.PACKER_DIRECTORY }}" -name "${{ env.PACKER_ENVIRONMENT }}*.pkrvars.hcl" -exec printf " -var-file={} " \;)
          cd "${{ env.PACKER_DIRECTORY }}"
          packer "${{ env.PACKER_ACTION }}" "${extra_vars}"
