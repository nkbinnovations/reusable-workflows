---
name: github-ansible-deploy
run-name: "${{ github.actor }} has triggered the ${{ github.workflow }} workflow"
on:
  pull_request:
    types:
      - unlabeled
      - labeled
      - synchronize
      - opened
      - reopened
      - edited
  workflow_call:
    inputs:
      ansible_version:
        description: 'Ansible version to use'
        required: false
        default: '2.18.0'
        type: string
      ansible_directory:
        description: 'relative path to ansible directory'
        required: false
        default: 'ansible'
        type: string
      ansible_requirements_file:
        description: 'relative ansible requirements file for role and collection dependencies'
        required: false
        default: 'ansible/requirements.yml'
        type: string
      ansible_inventory_file:
        description: 'relative ansible inventory file for deploying the playbooks'
        required: false
        default: 'ansible/inventory.yml'
        type: string
      ansible_playbook_file:
        description: 'relative filepath of ansible playbook file to deploy'
        required: false
        default: 'ansible/sample-playbook.yml'
        type: string
    secrets:
      ansible_private_key_path:
        description: 'Private key path for ansible deployment'
        required: true
      ansible_user:
        description: 'User for ansible deployment'
        required: true
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}  # This is the concurrency group name and should be unique per pull request
  cancel-in-progress: ${{ !contains(github.ref, 'release/')}}  # Cancel previous runs if a new run is triggered on a non-release branch
env:
  PYTHON_VERSION: '3.13.0'
  ANSIBLE_VERSION: ${{ inputs.ansible_version || 'v2.18.0' }}
  ANSIBLE_REQUIREMENTS_FILE: ${{ inputs.ansible_requirements_file || 'requirements.yml' }}
  ANSIBLE_DIRECTORY: ${{ inputs.ansible_directory || 'ansible' }}
  ANSIBLE_PLAYBOOK_FILE: ${{ inputs.ansible_playbook_file || 'sample-playbook.yml' }}
  ANSIBLE_INVENTORY_FILE: ${{ inputs.ansible_inventory_file || 'ansible/inventory.yml' }}
jobs:
  github-ansible-deploy:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4
        with:
          fetch-depth: 1
      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b  # v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Set up Ansible
        run: |-
          pip install ansible-core==${{ env.ANSIBLE_VERSION }}
      - name: Install Ansible dependencies
        run: |-
          if [ -f "${{ env.ANSIBLE_REQUIREMENTS_FILE }}" ]; then
            ansible-galaxy install -r ${{ env.ANSIBLE_REQUIREMENTS_FILE }}
          fi
      - name: Generate Private Keys
        if: github.event_name == 'pull_request'
        run: |-
          mkdir -p "${HOME}/.ssh";
          pass="$(openssl rand -base64 32)";
          echo "::add-mask::$pass"
          ssh-keygen -t rsa -b 4096 -C "${USER}" -f "${HOME}/.ssh/private_key.pem" -P "${pass}";
          chmod 600 "${HOME}/.ssh/private_key.pem";
      - name: Ansible Playbook Deploy
        id: ansible-playbook-deploy
        run: |-
          if [[ ! -f "${{ secrets.ansible_private_key_path }}" && "${{ github.event_name }}" != "pull_request" ]]; then
            echo "Private key not found. Exiting...";
          else
            if [[ -f "${{ env.ANSIBLE_INVENTORY_FILE }}" && -f  "${{ env.ANSIBLE_PLAYBOOK_FILE }}" ]]; then
              ansible-playbook \
                -i "${{ env.ANSIBLE_INVENTORY_FILE }}" \
                "${{ env.ANSIBLE_PLAYBOOK_FILE }}" \
                --private-key "${{ secrets.ansible_private_key_path || env.DEFAULT_PRIVATE_KEY_PATH }}" \
                -u "${{ secrets.ansible_user || env.DEFAULT_ANSIBLE_USER }}";
            else
              echo "Inventory/Playbook file not found. Exiting...";
            fi
          fi
        working-directory: "${{ github.workspace }}/${{ env.ANSIBLE_DIRECTORY }}"
        env:
          ANSIBLE_ROLES_PATH: "${{ env.ANSIBLE_DIRECTORY }}/roles:${HOME}/.ansible/roles"
          ANSIBLE_COLLECTIONS_PATH: "${{ env.ANSIBLE_DIRECTORY }}/collections:${HOME}/.ansible/collections"
          ANSIBLE_CONFIG: "${{ env.ANSIBLE_DIRECTORY }}/ansible.cfg"
          DEFAULT_ANSIBLE_USER: "${USER}"
          DEFAULT_PRIVATE_KEY_PATH: "${HOME}/.ssh/private_key.pem"
